basePath: /api/v1
definitions:
  tasks-api_internal_entity.TaskEntity:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: integer
      id:
        type: integer
      is_done:
        type: boolean
      performed_at:
        type: string
      summary:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
      user_id:
        type: integer
    type: object
  tasks-api_internal_usecase.ManagerAllTasksOutputDTO:
    properties:
      data:
        items:
          $ref: '#/definitions/tasks-api_internal_entity.TaskEntity'
        type: array
      page:
        type: integer
      total:
        type: integer
    type: object
  tasks-api_internal_usecase.NewUserInputDTO:
    properties:
      email:
        description: Here we'd need to validate "unique" in database
        type: string
      first_name:
        maxLength: 50
        minLength: 2
        type: string
      password:
        description: Here we'd need to validate password strength
        maxLength: 50
        minLength: 8
        type: string
      role_id:
        description: Here we'd need to validate that the role exists in the database
        type: integer
    required:
    - email
    - first_name
    - password
    - role_id
    type: object
  tasks-api_internal_usecase.SigninInputDTO:
    properties:
      email:
        type: string
      password:
        maxLength: 50
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  tasks-api_internal_usecase.SigninOutputDTO:
    properties:
      access_token:
        type: string
      role_id:
        type: integer
    type: object
  tasks-api_internal_usecase.TechnicianAllTasksOutputDTO:
    properties:
      data:
        items:
          $ref: '#/definitions/tasks-api_internal_entity.TaskEntity'
        type: array
      page:
        type: integer
      total:
        type: integer
    type: object
  tasks-api_internal_usecase.TechnicianFindTaskOutputDTO:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_done:
        type: boolean
      summary:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
      user_id:
        type: integer
    type: object
  tasks-api_internal_usecase.TechnicianNewTaskInputDTO:
    properties:
      summary:
        maxLength: 2500
        minLength: 3
        type: string
    required:
    - summary
    type: object
  tasks-api_internal_usecase.TechnicianNewTaskOutputDTO:
    properties:
      task_id:
        type: integer
    type: object
  tasks-api_internal_usecase.TechnicianUpdateTaskInputDTO:
    properties:
      is_done:
        type: boolean
      summary:
        maxLength: 255
        minLength: 1
        type: string
      task_id:
        type: integer
    required:
    - task_id
    type: object
  tasks-api_internal_usecase.TechnicianUpdateTaskOutputDTO:
    properties:
      task_id:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is an api for managing tasks
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Tasks API
  version: "1.0"
paths:
  /manager/task:
    get:
      consumes:
      - '*/*'
      description: all tasks.
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tasks-api_internal_usecase.ManagerAllTasksOutputDTO'
        "400":
          description: invalid request
          schema:
            type: string
        "401":
          description: unauthorized
          schema:
            type: string
        "403":
          description: forbidden
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: all tasks.
      tags:
      - Manager
  /manager/task/{task_id}:
    delete:
      consumes:
      - '*/*'
      description: delete task.
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: invalid request
          schema:
            type: string
        "401":
          description: unauthorized
          schema:
            type: string
        "403":
          description: forbidden
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: delete task.
      tags:
      - Manager
  /technician/task:
    get:
      consumes:
      - '*/*'
      description: all tasks.
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tasks-api_internal_usecase.TechnicianAllTasksOutputDTO'
        "400":
          description: invalid request
          schema:
            type: string
        "401":
          description: unauthorized
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: all tasks.
      tags:
      - Technician
    post:
      consumes:
      - '*/*'
      description: new task.
      parameters:
      - description: task
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/tasks-api_internal_usecase.TechnicianNewTaskInputDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/tasks-api_internal_usecase.TechnicianNewTaskOutputDTO'
        "400":
          description: invalid request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: new task.
      tags:
      - Technician
  /technician/task/{task_id}:
    get:
      consumes:
      - '*/*'
      description: find task.
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tasks-api_internal_usecase.TechnicianFindTaskOutputDTO'
        "400":
          description: invalid request
          schema:
            type: string
        "401":
          description: unauthorized
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: find task.
      tags:
      - Technician
    patch:
      consumes:
      - '*/*'
      description: update task.
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: integer
      - description: task
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/tasks-api_internal_usecase.TechnicianUpdateTaskInputDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/tasks-api_internal_usecase.TechnicianUpdateTaskOutputDTO'
        "400":
          description: invalid request
          schema:
            type: string
        "401":
          description: unauthorized
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: update task.
      tags:
      - Technician
  /user:
    post:
      consumes:
      - '*/*'
      description: new user.
      parameters:
      - description: user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/tasks-api_internal_usecase.NewUserInputDTO'
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            type: string
        "400":
          description: invalid request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: new user.
      tags:
      - User
  /user/signin:
    post:
      consumes:
      - '*/*'
      description: signin.
      parameters:
      - description: signin
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/tasks-api_internal_usecase.SigninInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: signin
          schema:
            $ref: '#/definitions/tasks-api_internal_usecase.SigninOutputDTO'
        "400":
          description: invalid request
          schema:
            type: string
        "401":
          description: unauthorized
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: signin.
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
